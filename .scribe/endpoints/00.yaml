name: Todos
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/todos
    metadata:
      groupName: Todos
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      status:
        name: status
        description: 'Filter todos by status.'
        required: false
        example: completed
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      search:
        name: search
        description: 'Search todos by title or details.'
        required: false
        example: project
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      sortBy:
        name: sortBy
        description: 'Sort todos by a field.'
        required: false
        example: created_at
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      order:
        name: order
        description: 'Sort order. Must be one of asc or desc.'
        required: false
        example: desc
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      status: completed
      search: project
      sortBy: created_at
      order: desc
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "data": [
              {
                "id": 1,
                "title": "New Todo",
                "details": "Details about the todo",
                "status": "completed",
                "user": {
                  "id": 1,
                  "name": "Kennedy Owusu",
                  "email": "kennedy@example.com"
                },
                "created_at": "2024-12-15T12:00:00Z",
                "updated_at": "2024-12-15T12:00:00Z",
                "deleted_at": null
              }
            ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/todos
    metadata:
      groupName: Todos
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'The title of the todo.'
        required: true
        example: 'Finish project'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      details:
        name: details
        description: 'The details of the todo.'
        required: false
        example: 'Complete API implementation'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      status:
        name: status
        description: 'The status of the todo. Must be one of completed, in progress, or not started.'
        required: true
        example: 'in progress'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      title: 'Finish project'
      details: 'Complete API implementation'
      status: 'in progress'
      user_id: 1
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "data": {
              "id": 1,
              "title": "Finish project",
              "details": "Complete API implementation",
              "status": "in progress",
              "user": {
                "id": 1,
                "name": "Kennedy Owusu",
                "email": "kennedy@example.com"
              },
              "created_at": "2024-12-15T12:00:00Z",
              "updated_at": "2024-12-15T12:00:00Z",
              "deleted_at": null
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/todos/{todo_id}'
    metadata:
      groupName: Todos
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      todo_id:
        name: todo_id
        description: 'The ID of the todo.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      todo:
        name: todo
        description: 'The ID of the todo.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      todo_id: 2
      todo: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "data": {
              "id": 1,
              "title": "Finish project",
              "details": "Complete API implementation",
              "status": "in progress",
              "user": {
                "id": 1,
                "name": "Kennedy Owusu",
                "email": "kennedy@example.com"
              },
              "created_at": "2024-12-15T12:00:00Z",
              "updated_at": "2024-12-15T12:00:00Z",
              "deleted_at": null
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "Todo not found."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/todos/{todo_id}'
    metadata:
      groupName: Todos
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      todo_id:
        name: todo_id
        description: 'The ID of the todo.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      todo:
        name: todo
        description: 'The ID of the todo.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      todo_id: 2
      todo: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'The updated title of the todo.'
        required: false
        example: 'Update title'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      details:
        name: details
        description: ''
        required: false
        example: error
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      status:
        name: status
        description: 'The updated status of the todo.'
        required: false
        example: completed
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      user_id:
        name: user_id
        description: 'The <code>id</code> of an existing record in the users table.'
        required: true
        example: quidem
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      title: 'Update title'
      details: error
      status: completed
      user_id: quidem
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "data": {
              "id": 1,
              "title": "Update title",
              "details": "Complete API implementation",
              "status": "completed",
              "user": {
                "id": 1,
                "name": "Kennedy Owusu",
                "email": "kennedy@example.com"
              },
              "created_at": "2024-12-15T12:00:00Z",
              "updated_at": "2024-12-15T12:00:00Z",
              "deleted_at": null
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/todos/{todo_id}'
    metadata:
      groupName: Todos
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified resource from storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      todo_id:
        name: todo_id
        description: 'The ID of the todo.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      todo:
        name: todo
        description: 'The ID of the todo.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      todo_id: 2
      todo: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Todo deleted successfully."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "Todo not found."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
